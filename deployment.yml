apiVersion: v1
kind: Namespace
metadata:
  name: react
  labels:
    apps: react
  annotations:
    type: react
---
apiVersion: v1
kind: Service
metadata:
  name: reactjs-frontend
  namespace: react
spec:
  type: NodePort
  selector:
    app: react
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: reactjs-backend
  namespace: react
spec:
  type: NodePort
  selector:
    app: react-api
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  namespace: react
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: reactjs-frontend
          servicePort: 3000
      - path: /api
        backend:
          serviceName: reactjs-backend
          servicePort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactjs
  namespace: react
  annotations:
    monitoring: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react
  template:
    metadata:
      labels:
        app: react
    spec:
      containers:
        - image: eu.gcr.io/light-footing-208411/react-app:latest
          name: react-app
          imagePullPolicy: Always
          resources:
          #   requests:
          #     memory: "0Mi"
          #     cpu: "0.1m"
          #   limits:
          #     cpu: "750m"
          #     memory: "2Gi"
          stdin: true
          tty: true
          ports:
            - containerPort: 3000